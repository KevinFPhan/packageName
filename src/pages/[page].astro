---
import type { GetStaticPaths, Page } from 'astro';
import Config from 'virtual:package-name/user-config';
import { Layout } from 'virtual:package-name/components';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import ArticleCard from '../components/blog/ArticleCard.astro';
import SquareCard from '../components/blog/SquareCard.astro';
import { type ArticleSchemaTransformed } from '../schema/ArticleSchema';
import { getArticles } from '../utils/routing';
import TagCard from '../components/blog/TagDiv.astro';

export const prerender = true;

type Props = {
	page: Page<ArticleSchemaTransformed>;
};

export const getStaticPaths = (async ({ paginate }) => {
	const { paginateSize } = Config;
	let articles = await getArticles();

	// Here we want to remove the first 9 elements of the array as they are already shown on the /blog page
	articles.splice(0, paginateSize);

	if (articles.length === 0) {
		return [];
	}

	return paginate(articles, { pageSize: paginateSize });
}) satisfies GetStaticPaths;

const { page } = Astro.props as Props;

const includeSidebar = true;

const totalPages = Math.ceil(page.total / Config.paginateSize);
const currentPage = page.currentPage;
const pageNumbers = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<Layout
	title={`Blog - Page ${page.currentPage}`}
	description={`Blog - Page ${page.currentPage}`}
	config={Config}
>
	<h1 class="col-span-4 pb-8 text-center text-5xl font-bold xl:col-span-4">
		Blog
	</h1>
	<div
		class="fade-in-up order-2 w-full bg-white bg-opacity-0 p-2 md:col-span-1"
	>
		{
			includeSidebar && (
				<>
					{/* <Profile /> */}
					{/* <CategoryCard /> */}
					<TagCard />
					{/* <SidebarTool /> */}
				</>
			)
		}
	</div>
	<hr class="my-8 border-slate-900/50 dark:border-slate-200/50" />
	<Breadcrumbs
		breadcrumbs={[
			{ href: '/', text: 'Home' },
			{ href: '/blog', text: 'Blog' },
			{ text: String(page.currentPage) },
		]}
	/>

	<div class="grid grid-cols-1 md:grid-cols-3 gap-8">
		{
			page.data.map((article) => (
				<SquareCard
					article={{ ...article }}
					time={article.remarkPluginFrontmatter.readingTime}
					word={article.remarkPluginFrontmatter.totalCharCount}
					target="_self"
				/>
			))
		}
	</div>

	<div class="flex items-center content-center justify-end gap-4 px-4">
		<a
			href={page.url.prev || '/blog'}
			class="rounded-xl px-4 py-2 bg-[var(--primary)] text-gray-900 dark:text-gray-950"
			>Previous Page</a
		>

		{
			page.url.next && (
				<a
					href={page.url.next}
					class="rounded-xl px-4 py-2 bg-[var(--primary)] text-gray-900 dark:text-gray-950"
				>
					Next Page
				</a>
			)
		}
	</div>
	<div class="flex items-center content-center justify-center gap-2 mt-4">
		{
			pageNumbers.map((number) => (
				<a
					href={number === 1 ? '/blog' : `/blog/${number}`}
					class={`rounded-xl px-4 py-2 ${number === currentPage ? 'bg-[var(--primary)] text-gray-900 dark:text-gray-950' : 'bg-gray-200 text-gray-700 dark:bg-gray-700 dark:text-gray-300'}`}
				>
					{number}
				</a>
			))
		}
	</div>
</Layout>
