---
import dayjs from "dayjs"
import { Image } from "astro:assets"
import type { EnvelopeInfo } from "../types"
// import { t } from "i18next";
const {
  title,
  desc,
  image,
  pubDate,
  badge,
  categories,
  tags,
  word,
  time,
  url,
} = Astro.props as EnvelopeInfo
const displayDate = dayjs(pubDate).format("ddd MMM DD YYYY")
const hasTategories = categories && categories.length > 0
const hasTags = tags && tags.length > 0
const target = "_self"
---

<div
  class="card bg-base-100 fade-in-up relative flex w-full flex-col overflow-hidden shadow-xl transition-colors lg:flex-row"
>
  <div
    class="rounded-0 card bg-base-100 fade-in-up relative order-2 flex h-auto w-full flex-1 overflow-hidden transition-colors lg:order-1"
  >
    <div class="relative flex h-full w-full flex-col justify-between p-6">
      <a href={url} target={target}>
        <h1 id={title} class="m-0 p-2 text-4xl leading-snug">
          {title}
        </h1>
      </a>
      <div class="m-2">{desc}</div>
      <div class="m-2">
        <div class="flex items-center justify-between">
          <div class="flex flex-wrap items-center gap-2">
            {
              displayDate && (
                <div class="badge badge-neutral">{displayDate}</div>
              )
            }
            {badge && <div class="badge badge-primary">{badge}</div>}
          </div>
          {
            time && (
              // <div class="badge  whitespace-nowrap">{`${time} ${t("label.readTime")}`}</div>
              <div class="badge whitespace-nowrap">{`${time} minutes`}</div>
            )
          }
        </div>
        <div class="mt-2 flex items-center justify-between">
          <div class="flex flex-wrap items-center gap-2">
            {
              hasTategories &&
                categories.length > 0 &&
                categories.map((category) => (
                  <a
                    href={`/blog/categories/${category}`}
                    class="btn btn-xs btn-accent text-sm"
                  >
                    {category}
                  </a>
                ))
            }
            {
              hasTags &&
                tags.length > 0 &&
                tags.map((tag) => (
                  <a href={`/blog/tag/${tag}`} class="btn text-sm px-2  rounded-lg bg-primary-300 btn-xs btn-secondary">
                    {tag}
                  </a>
                ))
            }
          </div>
          {word && <div class="badge whitespace-nowrap">{`${word} words`}</div>}
        </div>
      </div>
    </div>
  </div>

  {
    image && (
      <a
        href={url}
        target={target}
        class="image-link relative order-1 h-auto w-full overflow-hidden rounded-none lg:order-2 lg:w-2/5"
      >
        <Image
          src={image}
          alt={title}
          width="300"
          height="200"
          format="webp"
          loading="eager"
          class="h-full w-full object-cover"
        />
      </a>
    )
  }
</div>
