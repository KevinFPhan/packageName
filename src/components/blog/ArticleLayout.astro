---
import { Image } from 'astro:assets';
import { Layout } from 'virtual:package-name/components';
import { type ArticleSchemaTransformed } from '../../schema/ArticleSchema';

import Breadcrumbs from '../Breadcrumbs.astro';
import type { AstroBlogUserConfig } from '../../schema/UserConfigSchema';

import TagCard from './TagCard.astro';
import SidebarTool from './SidebarTool.astro';
import BaseCard from './BaseCard.astro';
import SquareCard from './SquareCard.astro';

type Props = {
	article: ArticleSchemaTransformed;
	config: AstroBlogUserConfig;
	recentBlogs: ArticleSchemaTransformed[];
};

const { article, config, recentBlogs } = Astro.props as Props;
---

<Layout
	title={article.title}
	description={article.description}
	seo={article.seo}
	{config}
>
	<div class="">
		<Breadcrumbs
			breadcrumbs={[
				{ href: '/', text: 'Home' },
				{ href: '/blog', text: 'Blog' },
				{ text: article.title },
			]}
		/>
		<div class="relative grid grid-cols-4 gap-4 p-0 md:top-0 md:p-0 lg:p-4">
			<div
				class="top-4 order-1 lg:order-2 block space-y-8 p-2 col-span-full lg:col-span-1 "
			>
				<div class="hidden lg:block">
					<TagCard />
				</div>
				<SidebarTool />
			</div>
			<div class="order-2 lg:order-1 col-span-4 p-2 lg:col-span-3">
				<div>
					<main class="detail transition-main">
						<div class="markdown grid grid-cols-1 gap-8 blog-container">
							<BaseCard
								isBlog={true}
								article={article}
								word={article.remarkPluginFrontmatter.totalCharCount}
								time={article.remarkPluginFrontmatter.readingTime}
							>
								<slot />
							</BaseCard>
							<div class="xl:hidden">
								<TagCard />
							</div>
							<section
								class="special_sect flex lg:max-w-screen-md flex-col pt-[48px]"
							>
								<h2 class="text-2xl">Recent Posts</h2>
								<div class="mt-5 grid gap-5 sm:grid-cols-2">
									{
										recentBlogs.map((article) => (
											<SquareCard
												article={{ ...article }}
												time={article.remarkPluginFrontmatter.readingTime}
												word={article.remarkPluginFrontmatter.totalCharCount}
												target="_self"
											/>
										))
									}
									<!-- {
										posts.slice(0, 2).map((post, i) => (
											<div class="max-w-[420px]">
												<PostSummary post={post} />
											</div>
										))
									} -->
								</div>
							</section>
						</div>
					</main>
					<br />
				</div>
			</div>
		</div>
	</div>
</Layout>
