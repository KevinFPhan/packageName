---
import dayjs from 'dayjs';
import { Image } from 'astro:assets';
import License from './License.astro';
import CommentWaline from './CommentWaline.astro';
import { type ArticleSchemaTransformed } from '../../schema/ArticleSchema';

type Props = {
	article: ArticleSchemaTransformed;
	class?: string;
  title?: string;
  image?: string;
  date?: string;
  badge?: string;
  categories?: Array<string>;
  tags?: Array<string>;
  word?: number;
  time?: number;
  isBlog?: boolean;
  url?: string;
};

const {
  article,
	title = 'undefined',
	image,
	date,
	badge,
	categories,
	tags,
	word,
	time,
	isBlog = false,
	url = decodeURIComponent(Astro.url.toString()),
} = Astro.props as Props;

const DATE_FORMAT = 'ddd MMM DD YYYY';

const displayDate = dayjs(date).format(DATE_FORMAT);
const hasCategories = categories && categories.length > 0;
const hasTags = article.tags && article.tags.length > 0;
---

<div
	class={`card fade-in-up relative w-full overflow-hidden backdrop-blur-2xl shadow-xl transition-colors ${isBlog ? 'xl:max-w-screen-md blog' : ''}`}
	title={article.title}
>
	<!-- {
    image && (
      <Image
        src={image}
        width="1920"
        height="1080"
        format="webp"
        alt={title}
        class="card-img"
        loading="eager"
      />
    )
  } -->
	<div
		class="main-card card fade-in-up relative z-10 flex flex-col p-6 leading-6 transition-colors md:p-6 lg:p-8"
	>
		{
			isBlog && (
				<>
					<h1 id={article.title} class="mt-2">
						{article.title}
					</h1>
					<div class="info mt-2">
						<div class="flex items-center justify-between">
							<div class="flex items-center gap-2">
								{displayDate && (
									<div class="badge rounded-full bg-neutral-100/70 dark:bg-neutral-900/50 dark:text-gray-100 px-3 py-0.5">
										{displayDate}
									</div>
								)}
								{/* {badge && <div class="badge badge-primary">{badge}</div>} */}
							</div>
							{time && (
								// <div class="badge whitespace-nowrap">{`${time} ${t("label.readTime")}`}</div>
								<div class="badge whitespace-nowrap bg-neutral-100/70 dark:bg-neutral-900/50 dark:text-gray-100">
									{`${time}`} minutes
								</div>
							)}
						</div>
						<div class="mt-3 flex items-center justify-between">
							<div class="flex flex-wrap items-center gap-2">
								{hasCategories &&
									categories.map((category) => (
										<a
											href={`/blog/categories/${category}`}
											class="tag badge btn-xs btn-secondary"
										>
											{category}
										</a>
									))}
								{hasTags &&
									article.tags.map((tag) => (
										<a
											href={`/blog/tag/${tag}`}
											class="btn btn-xs rounded-md dark:text-blue-300 dark:border-blue-400 border border-blue-500 px-2 py-[2px] text-xs text-blue-600"
										>
											{tag}
										</a>
									))}
							</div>
							{word && (
								// <div class="badge  whitespace-nowrap">{`${word} ${t("label.wordCount")}`}</div>
								<div class="badge whitespace-nowrap bg-neutral-100/70 dark:bg-neutral-900/50 dark:text-gray-100">{`${word} words`}</div>
							)}
						</div>
					</div>
					<hr class="mt-6" />
				</>
			)
		}
		<slot />
		<!-- {
      isBlog && (
        <>
          <License title={title} url={url} />
          <CommentWaline />
        </>
      )
    } -->
	</div>
</div>
